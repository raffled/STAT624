library(knitr)
knit2html("multicore.Rmd")
install.packages("multicore")
knit2html("multicore.Rmd")
detectCore()
detectCores()
knit2html("multicore.Rmd")
library(multicore)
install.packages("multicore")
help(install.packages)
install.packages("multicore.tar.gz", repos=NULL, type="source")
install.packages("./multicore.tar.gz", repos=NULL, type="source")
mclibs
mclibs
mclibs
knit2html("multicore.Rmd")
knit2html("multicore.Rmd")
knit2html("multicore.Rmd")
sleeptimme
sleeptime
install.packages("rlecuyer")
install.packages("rsprng")
detectCores()
q()
n
help(set.seed)
help(mclapply)
help(mcparallel)
getOption("mc.cores")
exists("mcfork", type="function")
exists("mcfork", mode="function")
mcfork
fork
parallel::mcfork
help(makeForkCluster)
exists("mcfork")
exists("mclapply")
mcfork()
help(mcfork)
parallel::mcfork
parallel:::mcfork
exists(parallel:::mcfork)
exists("parallel:::mcfork")
parallel:::mcfork()
exists("parallel:::mcfork", mode="function")
help(exists)
exists("parallel:::mcfork", mode="function", where="parallel")
seach()
search()
exists("mcfork", mode="function", where="package:parallel")
exists("mcfork", mode="function", envir="package:parallel")
exists("mcfork", mode="function", where="package:parallel")
exists("mcfork", where="package:parallel")
exists("mclapply", where="package:parallel")
exists("parallel:::mcfork", mode="function")
exists("parallel:::mcfork()", mode="function")
exists("parallel::mcfork", mode="function")
q()
n
